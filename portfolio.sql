create database portfolio_project;
use portfolio_project;


SELECT 
    *
FROM
    demographics;
SELECT 
    *
FROM
    location;
SELECT 
    *
FROM
    population;
SELECT 
    *
FROM
    services;
SELECT 
    *
FROM
    churn_status;

-- ------------------------------------------------------------------------------------------------------
-- ------------------------------------------- BASIC QUESTIONS-------------------------------------------
-- ------------------------------------------------------------------------------------------------------
-- 1. How many customers are there in total?
SELECT 
    COUNT(Customer_ID) AS churn_status
FROM
    churn_status;

-- 2. What is the distribution of customers by gender?
SELECT 
    gender, COUNT(gender) AS Count
FROM
    demographics
GROUP BY gender;

-- 3. How many customers have internet service?
SELECT 
    Internet_Service, COUNT(*) AS internet_service
FROM
    services
GROUP BY Internet_Service;

-- 4.How many customers have churned?
SELECT 
    COUNT(*) AS churned_customer
FROM
    churn_status
WHERE
    Churn_Label = 'Yes';

-- 5.How many customers have churned by gender?
SELECT 
    d.gender, COUNT(*) AS churned_customer
FROM
    churn_status cs
        JOIN
    demographics d ON cs.Customer_ID = d.Customer_Id
WHERE
    cs.Churn_Label = 'Yes'
GROUP BY d.gender;

-- 6.What is the average monthly charge for all customers?
SELECT 
    ROUND(AVG(Monthly_Charge), 2) AS avg_monthly_charge
FROM
    services;

-- 7.What is the distribution of customers based on their tenure?
SELECT 
    Tenure_in_Months, COUNT(*) AS customer_count
FROM
    services
GROUP BY Tenure_in_Months;

-- 8.What is the total revenue generated by all customers?
SELECT 
    ROUND(SUM(Total_Revenue), 2) AS Total_revenue
FROM
    services;

-- 9.What are the different contract types and how many customers are in each?
SELECT 
    Contract, COUNT(*) AS customer_count
FROM
    services
GROUP BY Contract;

-- 10.How many customers are in each zip code?
SELECT 
    l.Zip_Code, COUNT(*) AS customer_count
FROM
    location l
        JOIN
    churn_status s ON l.Customer_ID = s.Customer_ID
GROUP BY l.Zip_Code;

-- ------------------------------------------------------------------------------------------------------
-- ------------------------------------------- Intermediate QUESTIONS-------------------------------------------
-- ------------------------------------------------------------------------------------------------------

SELECT 
    (SUM(Churn_Value) / COUNT(*)) * 100 AS churn_rate
FROM
    churn_status;

-- 2.What is the churn rate by age group? 
SELECT 
    d.Age,
    ROUND((SUM(Churn_Value) / COUNT(*)), 2) * 100 AS churn_rate
FROM
    churn_status cs
        JOIN
    demographics d ON cs.Customer_ID = d.Customer_ID
GROUP BY d.Age;

-- 3.Which contract type has the highest churn rate?
SELECT 
    s.Contract,
    ROUND((SUM(Churn_Value) / COUNT(*)), 2) * 100 AS churn_rate
FROM
    churn_status cs
        JOIN
    services s ON cs.Customer_ID = s.Customer_ID
GROUP BY s.Contract;

-- 4.What is the churn rate based on customer tenure?
SELECT 
    s.Tenure_in_Months,
    ROUND((SUM(Churn_Value) / COUNT(*)), 2) * 100 AS churn_rate
FROM
    churn_status cs
        JOIN
    services s ON cs.Customer_ID = s.Customer_ID
GROUP BY s.Tenure_in_Months;

-- 5.What is the churn rate based on internet service type?
SELECT 
    s.Internet_Service,
    ROUND((SUM(Churn_Value) / COUNT(*)), 2) * 100 AS churn_rate
FROM
    churn_status cs
        JOIN
    services s ON cs.Customer_ID = s.Customer_ID
GROUP BY s.Internet_Service;

-- 6.Does the churn rate correlate with population size in different zip codes? 
SELECT 
    l.Zip_Code,
    p.Population,
    ROUND((SUM(Churn_Value) / COUNT(*)), 2) * 100 AS churn_rate
FROM
    churn_status s
        JOIN
    location l ON s.Customer_ID = l.Customer_ID
        JOIN
    population p ON l.Zip_Code = p.Zip_Code
GROUP BY l.Zip_Code , p.Population;

-- --------------------------------------------------------------------------------------------------------
-- ------------------------------------------- Advanced QUESTIONS-------------------------------------------
-- ---------------------------------------------------------------------------------------------------------

SELECT 
    d.Age,
    s.Internet_Service,
    s.Phone_Service,
    ROUND((SUM(Churn_Value) / COUNT(*)), 2) * 100 AS churn_rate
FROM
    demographics d
        JOIN
    services s ON d.Customer_ID = s.Customer_ID
        JOIN
    churn_status cs ON d.Customer_ID = cs.Customer_ID
GROUP BY d.Age , s.Internet_Service , s.Phone_Service;

-- 2.What is the average customer lifetime value (CLV) for different customer segments? 
SELECT 
    Contract,
    Internet_Service,
    ROUND(AVG(Monthly_Charge * Tenure_in_Months),
            3) AS avg_clv
FROM
    churn_status cs
        JOIN
    services s ON cs.Customer_ID = s.Customer_ID
GROUP BY Contract , Internet_Service;

-- 3.Do customers with more than two services churn more frequently?
SELECT 
    (CASE
        WHEN (Phone_Service = 'Yes') + (Internet_Service = 'Yes') + (Online_Backup = 'Yes') + (Device_Protection_Plan = 'Yes') + (Premium_Tech_Support = 'Yes') + (Streaming_TV = 'Yes') + (Streaming_Movies = 'Yes') > 2 THEN 'More than 2 services'
        ELSE '2 or fewer services'
    END) AS service_count_group,
    ROUND((SUM(Churn_Value) / COUNT(*)), 2) * 100 AS churn_rate
FROM
    services s
        JOIN
    churn_status cs ON cs.Customer_ID = s.Customer_ID
GROUP BY service_count_group;

-- 4.What are the predicted monthly charges for the next customer based on the current customer's charges? 
SELECT Customer_ID, Monthly_Charge, 
       LEAD(Monthly_Charge, 1) OVER (ORDER BY Customer_ID) AS next_month_charges
FROM services;

-- 5.What were the previous customer's monthly charges, and how does it compare to the current customer's charges? 
SELECT Customer_ID, Monthly_Charge, 
       LAG(Monthly_Charge, 1) OVER (ORDER BY Customer_ID) AS previous_month_charges
FROM services;

-- 6.How does the tenure of the current customer compare to the previous customer?
SELECT Customer_ID, Tenure_in_Months, 
       LAG(Tenure_in_Months, 1) OVER (ORDER BY Customer_ID) AS previous_tenure_months
FROM services;

-- 7.How are customers ranked based on their monthly charges?
SELECT Customer_ID, Monthly_Charge, 
       DENSE_RANK() OVER (ORDER BY Monthly_Charge DESC) AS charge_rank
FROM services;

-- 8.What is the rolling average of monthly charges for each customer over their tenure? 
SELECT Customer_ID, Tenure_in_Months, Monthly_Charge, 
       AVG(Monthly_Charge) OVER (ORDER BY Tenure_in_Months ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS rolling_avg_monthly_charges
FROM services;

-- 9.How many customers have churned in the last 3 months, for each customer in the dataset? 
SELECT s.Customer_ID, s.Tenure_in_Months, cs.Churn_Label, 
       SUM(CASE WHEN cs.Churn_Label = 'Yes' THEN 1 ELSE 0 END) 
       OVER (ORDER BY s.Tenure_in_Months ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS rolling_churn_count
FROM services s
join churn_status cs
ON cs.Customer_ID = s.Customer_ID;


-- --------------------------------------------------------------------------------------------------------
-- ------------------------------------------- GIVING QUESTIONS-------------------------------------------
-- ---------------------------------------------------------------------------------------------------------


-- 1. Considering the top 5 groups with the highest average monthly charges among churned customers, how can personalized offers be tailored based on age,
-- gender, and contract type to potentially improve customer retention rates?
with avg_charges as (
select s.Customer_ID, s.Contract as contract_type,
avg(Monthly_Charge) over (partition by Customer_ID order by Monthly_Charge desc) as average_monthly_charges, cs.Customer_Status
from services s
join churn_status cs
on s.Customer_ID = cs.Customer_ID
where cs.Churn_Label = "Yes")

select d.Age, d.Gender,ac.*
from avg_charges ac
join demographics d
on ac.Customer_ID =d.Customer_ID
order by ac.average_monthly_charges desc
limit 5;

-- 2.What are the feedback or complaints from those churned customers
with avg_charges as (
select s.Customer_ID, s.Contract as contract_type, cs.Churn_Reason,
avg(Monthly_Charge) over (partition by Customer_ID order by Monthly_Charge desc) as average_monthly_charges, cs.Customer_Status
from services s
join churn_status cs
on s.Customer_ID = cs.Customer_ID
where cs.Churn_Label = "Yes")

select d.Age, d.Gender,ac.*
from avg_charges ac
join demographics d
on ac.Customer_ID =d.Customer_ID
order by ac.average_monthly_charges desc
limit 5;

-- 3.How does the payment method influence churn behavior?
with avg_charges as (
select s.Customer_ID, s.Contract as contract_type, cs.Churn_Reason, s.Payment_Method,
avg(Monthly_Charge) over (partition by Customer_ID order by Monthly_Charge desc) as average_monthly_charges, cs.Customer_Status
from services s
join churn_status cs
on s.Customer_ID = cs.Customer_ID
where cs.Churn_Label = "Yes")

select d.Age, d.Gender,ac.*
from avg_charges ac
join demographics d
on ac.Customer_ID =d.Customer_ID
order by ac.average_monthly_charges desc
limit 5;

-- 4.churned customers with Satisfaction Scores 1 or 2

-- CTE to filter churned customers with Satisfaction Scores 1 or 2
WITH churned_customers AS (
    SELECT cs.Customer_ID, cs.Churn_Reason, cs.Satisfaction_Score, cs.Churn_Label
    FROM churn_status cs
    JOIN demographics d ON cs.Customer_ID = d.Customer_ID
    WHERE cs.Churn_Label = 'Yes'
      AND cs.Satisfaction_Score IN (1, 2)
)

-- Analyze churn reasons and count of satisfaction scores
SELECT Churn_Reason, 
       Satisfaction_Score, 
       COUNT(Customer_ID) AS count_of_customers
FROM churned_customers
GROUP BY Churn_Reason, Satisfaction_Score
ORDER BY count_of_customers desc,Satisfaction_Score ,Churn_Reason
limit 10;




